# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

if [ -f /opt/homebrew/bin/brew ]; then
  eval $(/opt/homebrew/bin/brew shellenv)
fi

# Set up Antidote for shell plugin management
source $(brew --prefix)/opt/antidote/share/antidote/antidote.zsh
antidote load

# Load chruby
if [[ $(uname -m) == 'arm64' ]]; then
  if [ -f /usr/local/share/chruby/chruby.sh ]; then
    source /usr/local/share/chruby/chruby.sh
    source /usr/local/share/chruby/auto.sh
  fi
else
  if [ -f /opt/homebrew/opt/chruby/chruby.sh ]; then
    source /opt/homebrew/opt/chruby/chruby.sh
    source /opt/homebrew/opt/chruby/auto.sh
  fi
fi


# Enable Zsh completion
autoload -U compinit; compinit

MAGIC_ENTER_GIT_COMMAND='git status -u .'
MAGIC_ENTER_OTHER_COMMAND='k -ah'

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/Users/mike/opt/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
  eval "$__conda_setup"
else
  if [ -f "/Users/mike/opt/miniconda3/etc/profile.d/conda.sh" ]; then
    . "/Users/mike/opt/miniconda3/etc/profile.d/conda.sh"
  else
    export PATH="/Users/mike/opt/miniconda3/bin:$PATH"
  fi
fi

unset __conda_setup
# <<< conda initialize <<<

# Keep 10,000,000 lines of history within the shell and save it to ~/.zsh_history:
HISTSIZE=10000000
SAVEHIST=10000000
HISTFILE=~/.zsh_history

# Platform specific customizations
if [ -f ~/.platformrc ]; then
    source ~/.platformrc
fi

# Aliases
alias gco="git branch | fzf | xargs git checkout"
alias gbd="git branch --no-color | fzf -m | xargs -I {} git branch -D '{}'"

export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# AIRLAB-DO-NOT-MODIFY section:ShellWrapper {{{
# Airlab will only make edits inside these delimiters.

# Source Airlab's shell integration, if it exists.
if [ -e ~/.airlab/shellhelper.sh ]; then
  source ~/.airlab/shellhelper.sh
fi
# AIRLAB-DO-NOT-MODIFY section:ShellWrapper }}}

# Initialize pyenv if it's installed
if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init -)"
fi

export PATH="/opt/homebrew/bin:$PATH"
export PATH="/usr/local/sbin:$PATH"
